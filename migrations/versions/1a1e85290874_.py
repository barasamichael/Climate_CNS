"""empty message

Revision ID: 1a1e85290874
Revises: 
Create Date: 2023-11-02 03:41:46.832382

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = '1a1e85290874'
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('event',
    sa.Column('eventId', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('title', sa.String(length=255), nullable=True),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('imageUrl', sa.String(length=255), nullable=True),
    sa.Column('startDateTime', sa.DateTime(), nullable=True),
    sa.Column('endDateTime', sa.DateTime(), nullable=True),
    sa.Column('venue', sa.String(length=255), nullable=True),
    sa.Column('latitude', sa.Float(), nullable=True),
    sa.Column('longitude', sa.Float(), nullable=True),
    sa.Column('organizer', sa.String(length=255), nullable=True),
    sa.Column('isCancelled', sa.Boolean(), nullable=True),
    sa.Column('dateCreated', sa.DateTime(), nullable=True),
    sa.Column('lastUpdated', sa.DateTime(), nullable=True),
    sa.PrimaryKeyConstraint('eventId')
    )
    with op.batch_alter_table('event', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_event_eventId'), ['eventId'], unique=False)

    op.create_table('role',
    sa.Column('roleId', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('name', sa.String(length=50), nullable=False),
    sa.Column('default', sa.Boolean(), nullable=True),
    sa.Column('permissions', sa.Integer(), nullable=True),
    sa.PrimaryKeyConstraint('roleId')
    )
    with op.batch_alter_table('role', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_role_default'), ['default'], unique=False)

    op.create_table('user',
    sa.Column('userId', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('firstName', sa.String(length=40), nullable=True),
    sa.Column('middleName', sa.String(length=40), nullable=True),
    sa.Column('lastName', sa.String(length=40), nullable=True),
    sa.Column('username', sa.String(length=255), nullable=False),
    sa.Column('emailAddress', sa.String(length=255), nullable=False),
    sa.Column('phoneNumber', sa.String(length=255), nullable=False),
    sa.Column('passwordHash', sa.String(length=255), nullable=False),
    sa.Column('imageUrl', sa.String(length=255), nullable=True),
    sa.Column('roleId', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['roleId'], ['role.roleId'], ),
    sa.PrimaryKeyConstraint('userId')
    )
    with op.batch_alter_table('user', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_user_emailAddress'), ['emailAddress'], unique=True)
        batch_op.create_index(batch_op.f('ix_user_phoneNumber'), ['phoneNumber'], unique=True)
        batch_op.create_index(batch_op.f('ix_user_userId'), ['userId'], unique=False)
        batch_op.create_index(batch_op.f('ix_user_username'), ['username'], unique=True)

    op.create_table('record',
    sa.Column('recordId', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('userId', sa.Integer(), nullable=True),
    sa.Column('species', sa.String(length=255), nullable=True),
    sa.Column('dateCreated', sa.DateTime(), nullable=True),
    sa.Column('datePlanted', sa.Date(), nullable=True),
    sa.Column('numberOfTrees', sa.Integer(), nullable=True),
    sa.Column('imageUrl', sa.String(length=255), nullable=True),
    sa.Column('location', sa.String(length=255), nullable=True),
    sa.Column('longitude', sa.Float(), nullable=True),
    sa.Column('latitude', sa.Float(), nullable=True),
    sa.Column('lastUpdated', sa.DateTime(), nullable=True),
    sa.Column('isConfirmed', sa.Boolean(), nullable=True),
    sa.Column('isRevoked', sa.Boolean(), nullable=True),
    sa.ForeignKeyConstraint(['userId'], ['user.userId'], ),
    sa.PrimaryKeyConstraint('recordId')
    )
    with op.batch_alter_table('record', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_record_recordId'), ['recordId'], unique=False)

    op.create_table('registered_event',
    sa.Column('registeredEventId', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('userId', sa.Integer(), nullable=True),
    sa.Column('eventId', sa.Integer(), nullable=True),
    sa.Column('isCancelled', sa.Boolean(), nullable=True),
    sa.Column('isAttended', sa.Boolean(), nullable=True),
    sa.Column('dateCreated', sa.DateTime(), nullable=True),
    sa.Column('lastUpdated', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['eventId'], ['event.eventId'], ),
    sa.ForeignKeyConstraint(['userId'], ['user.userId'], ),
    sa.PrimaryKeyConstraint('registeredEventId')
    )
    with op.batch_alter_table('registered_event', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_registered_event_registeredEventId'), ['registeredEventId'], unique=False)

    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('registered_event', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_registered_event_registeredEventId'))

    op.drop_table('registered_event')
    with op.batch_alter_table('record', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_record_recordId'))

    op.drop_table('record')
    with op.batch_alter_table('user', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_user_username'))
        batch_op.drop_index(batch_op.f('ix_user_userId'))
        batch_op.drop_index(batch_op.f('ix_user_phoneNumber'))
        batch_op.drop_index(batch_op.f('ix_user_emailAddress'))

    op.drop_table('user')
    with op.batch_alter_table('role', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_role_default'))

    op.drop_table('role')
    with op.batch_alter_table('event', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_event_eventId'))

    op.drop_table('event')
    # ### end Alembic commands ###
